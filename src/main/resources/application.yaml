spring:
  kafka:
    consumer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVER:localhost:9092}
      group-id: mygroupid
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
        spring.json.use.type.headers: "false"
    topic:
      transactions: ${KAFKA_TOPIC:emailtpc}

  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${URL_DATABASE:jdbc:postgresql://localhost:5433/email}
    username: ${DATABASE_USERNAME:postgres}
    password: ${DATABASE_PASSWORD:email123}
  jpa:
    hibernate:
      #ddl-auto: update
      #ddl-auto: create-drop
    database-platform: org.hibernate.dialect.PostgreSQLDialect
      #dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    database: postgresql
    properties:
      hibernate:
        format_sql: true

#  datasource:
#    driver-class-name: org.postgresql.Driver
#    username: postgres
#    url: ${DATABASE_URL:jdbc:postgresql://localhost:5433/email}
#    testWhileIdle: 'true'
#    validationQuery: SELECT 1
#    password: email123
#  jpa:
#    properties:
#      hibernate:
#        dialect: org.hibernate.dialect.PostgreSQLDialect
#    hibernate:
#      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
#      ddl-auto: update
#    show-sql: 'true'
server:
  port : 8081
